//
// Created by Clayton Wong on 2018-12-20.
//

#include <iostream>
#include <string>
#include <vector>
#include <unordered_set>
#include <unordered_map>


using namespace std;

struct Room
{
    int row{ 0 }, col{ 0 };
};
struct Hash{ size_t operator()( const Room& room ) const { return abs( 1000 * room.row ) + abs( room.col ); } };
bool operator==( const Room& lhs, const Room& rhs ){ return lhs.row == rhs.row && lhs.col == rhs.col; }
using Rooms = unordered_set< Room, Hash >;
using Doors = unordered_map< Room, Rooms, Hash >;
using Stack = vector< Room >;
struct Map
{
    Rooms rooms;
    Doors doors;
                                                                   // ensure the rooms at coordinates cur/next both exist
    bool canGo( const Room& cur, const Room& next ) const noexcept // and there is an adjacent door from cur to next
    {
        if( rooms.find( cur ) != rooms.end() && rooms.find( next ) != rooms.end() )
        {
            const auto adj = doors.find( cur );
            if( adj != doors.end() && adj->second.find( next ) != adj->second.end() )
            {
                return true; // found (d)oor from cur room to next room
            }
        }
        return false;
    }
};
using Directions = vector< Room >;
using Cardinals = unordered_map< char, int >;
const Directions DIR{ { -1, 0 }, { 1, 0 }, { 0, 1 }, { 0, -1 } }; // (N)orth, (S)outh, (E)ast, (W)est
      Cardinals CARD{   {'N',0},  {'S',1},  {'E',2},   {'W',3} }; // (N)orth, (S)outh, (E)ast, (W)est

const int R{ 51 }, C{ 49 }, N { 100 };
vector< vector< char > > G( N, vector< char >( N, '.' ) );


class Solution
{
public:

    Map getMap( const string& input, Rooms rooms={}, Doors doors={}, Stack stack={} ) const
    {
        Room start{ 0,0 }, cur{ start };
        rooms.insert( cur );
        G[ cur.row+R ][ cur.col+C ] = 'X';
        for( auto it{ input.cbegin() }; it != input.cend(); ++it )
        {
            if( *it == 'N' || *it == 'S' || *it == 'E' || *it == 'W' )
            {
                Room next{ cur.row + DIR[ CARD[*it] ].row, cur.col + DIR[ CARD[*it] ].col };
                rooms.insert( next );
                G[ cur.row+R ][ cur.col+C ] = *it;
                auto curDoors = doors.find( cur ), nextDoors = doors.find( next );
                if( curDoors == doors.end() )
                {
                    doors[ cur ] = {};
                    curDoors = doors.find( cur );
                }
                if( nextDoors == doors.end() )
                {
                    doors[ next ] = {};
                    nextDoors = doors.find( next );
                }
                curDoors->second.insert( next ), nextDoors->second.insert( cur );
                swap( cur, next );
            }
            else if( *it == '(' ) stack.push_back( cur );
            else if( *it == '|' ) cur = stack.back();
            else if( *it == ')' ) stack.pop_back();
        }
        return Map{ rooms, doors };
    }


    int go( const Map& map, size_t& maxDepth, Room&& cur={0,0}, Rooms&& V={{0,0}}, size_t depth=0 ) const
    {
        for( auto card{ 0 }; card < DIR.size(); ++card ) // (card)inal directions (N)orth, (S)outh, (E)ast, (W)est
        {
            auto next = Room{ cur.row + DIR[ card ].row, cur.col + DIR[ card ].col };
            if( map.canGo( cur, next ) && V.insert( next ).second )
            {
                ++depth;
                cout << "cur: " << G[ cur.row+R ][ cur.col+C ] << " @ [ " << cur.row+R << " ][ " << cur.col+C << " ]" << endl;
                maxDepth = max( maxDepth, depth ), go( map, maxDepth, move(next), move(V), depth );
                cout << depth << endl;
                V.erase( next );
                --depth;
            }
        }
        return maxDepth;
    }

};

int main()
{
    Solution s;
    Map map = s.getMap( INPUT );

    for( auto i{ 0 }; i < N; cout << endl, ++i )
        for( auto j{ 0 }; j < N; ++j )
            cout << G[ i ][ j ];
    cout << endl;


    size_t maxDepth{ 0 };
    s.go( map, maxDepth );
    cout << "answer part 1: " << maxDepth << endl;

    return 0;
}

/*
SWSEEEEEEEEEEEESEESEEES.WWE.SWWWSWWWWWEEE.SWWE.SWWSWEES.WW.SWWEESEEEEESEESEEEESSWSWSEEES.WWES.WWSES.
SNWNWWWWWSSWWW.SNWSN.WEEES.SW.ENSES.EN.SWSWSWNWWSNSENSSESNWW.NW.SNN.SWEN.SNSWWSSWWNWNESES.ENEESNWNSN
S.EEEEEENEEE.NWWEN.SWWWWWSSWESN.ENENNSWWNESSNSEENNWNENENSESEE.NNSENSWNEESENE.NSEEEE.SWESESNEESSEENES
SNNWWWWSWWWWWNWSWWWSESESN.ESNSNWWWWWNSESNWSSNENES.ENNWWWWSENEENSWSWW.NNWEEEEESS.WWES.NWSWSNNWNSNWWSW
ENESSWNSEESSNWWSSENENESSNWWENEEEEESSNSNESNWSNWENESNWSWSW.EEENESESS.ESNEN.SWWWSESS.NEEEN.NSSWNSWNWNES
.WSWESNWN.SEESNWWNE.SWWEE.NSWWSWWWSWNWESEESSSNNSWESSWNWNWSWWWESSWESNSNNWWWEENESSENNWW.EENSSNNESEEN.S
ENSESE.SWWSESSEEESNWES.NWWNE.NSSWNSEEESENSWENNNSNWWEEEE.NSES.N.EESSNENESEENSWSWESNWENENNSW.NNWEN.SNW
NSWNSNWWENENESNWWSNNWSEESNSWENSESNWNESEESS.WSNNEESEENEESNENENNWWSW.NSWWEN.SWWWE.SENNENENEEENNNWSNES.
NESNEEESNSEE.SSWNSNWNSN.SNWNNWWESSENNEE.SEENESNESSNEEN.EN.WWSESNWEENSSNWENEEEENSWEENNNSWWWWWNWWWNWWN
NWEN.SWWNSNWWWESNESNNENNES.NEEENSSN.SWWWESESSWNWESENSWEEEENNEES.WNW.WWENNWWSWSWW.WWWWNEEESNNEEESESEN
NNSWNWES.ESESESWNSWENSWNWWENESESSWNWEESNWSNEES.NWENSWNWWWWWWE.EEEENEEEN.WSWWNESESNWENSWWWSNWWWWENSNN
NWWEEENSE.ENSNSENSENSWNES.NWNENS.EENSWS.NWNES.EENSWSEEEEEESNSWE.SWENSWWWWWE.NWENSENNWW.ENEESEENSWESN
SEENSWSWNWWWENSN.ENSWEN.SEENN.SWENESSWSSWESNEENSWWNWNEN.WWSNWNSWSN.SWEEE.EESNNWWEEEEESENEE.SNWWWNSWN
SNSWWSWEEESN.SWNWENS.N.SWNESNSW.NWWSWNW.NSWN.SWESESESNSWSWSESNWNSNSWENEESNSWNWSWWWWWWENENNWSEEESNESN
.NSWSWEN.SWSWWESNWWWNNWWENNENESEEENSESEENEENNWN.ENENSNSNWNSNS.ENSNWEESNSWNEESNS.EEEEEESNEESENSWSE.ES
EN.NSENSWWSSEESEEESSNWWWNWNWW.ENSSWSNENEWWWWESNWWWWWSNESENENSNN.EESN.ENEEN.WESENNSWWWWSNNWSESSWWNSWS
N.ENEN.SESEEN.ESNSWEEE.EENSENNSWWSNWNWSWSWWNWW.SW.ENSNWSNWW.ENNWE.SNSWS.WSWNSSENNEESSNESENENSSESNWNS
NWNSWWNENESSWWWSNES.SEENSWWN.WWNWWESENSNW.NWSWWSNWNSWNNWE.NNWS.NWWWN.NEENSNWSSESNSWWWNWENEESSESEE.NW
ENNES.NWW.SEESNWSWES.NSWWESNSWWWWSWENSW.WSENSENS.NNSSNEESENNNEEESSWNWNWWWE.N.SNENS.SWWWSWWWEE.SNWSE.
SWWSSES.NWW.SW.SWNWEENEWENENESSWNESSWWEENSNWWN.ESNNSENN.SN.SWWWWSEESNWESEESNSWSWWENES.NWESNWWSW.NWNW
S.NEENEESSWNSENSE.NES.EEN.SWWESNN.WSSWNW.WSSWNWWWNNEEENNENSWE.NNEESESNNEN.ENSEE.NSWWWNWWNEE.NEEESEEN
ENNW.WWWS.NSWNWWNESNESNSWWESNWWENSWSSSWNWWSSESEESNWWEE.NWWWEESNSWWSNSNNENSWWWNWENS.WEEESNWWWNE.SWN.S
SW.NWNWNESNESEESEN.N.ESS.NWW.EESSWNSSSEE.NS.NSNWEEENNSWESEENSWSW.NSNSNNNSWESEESNWESNSWWSNWWNNWWWENSW
EEESNWNWWWSWSN.WNESNSWSSNWWWNNW.SSNSSWN.ENEENESNWWWWW.NSWNW.S.SENNENSNNWESNEN.EES.SNS.NEEEEEES.WNSS.
.SWWENSSWWSNWNWEENENSNSSES.EE.NSWNNSSENENSWEESEEEEESNWNEESNNENSN.NE.SNEN.ENSWNWWSSWNWENSWWWWWEENENSN
NS.ENSWE.NWESENNSWSWWNSS.ESNWWNWENNWSNWNWESN.ES.SWWSENN.SWNNWSSNWWNSWNNSES.SES.NWEEESSWWEEE.NWWENSWN
SWEN.ES.EES.ESENSNE.EN.SNWW.ENESNWWWS.NWN.WNWWSSW.NWNSWWW.N.NSSSSNNSENNWN.SWNENSWWWWWSEEEEEEEENNWSEN
S.N.E.EEN.SSWWN.SSWENSWWSESENE.EESENESENNWWWSN.SENESNESEESNWW.SSWNNSNSW.NWS.WWSWES.SWWNWWWWWSSWSWENS
SNNWNWSWSNSEESNWSWNNSWSWEESNWNWSWWNNWSNSESEN.NWESNWWN.ENSW.ENSW.ESNWNWNWWWSESNESNESEESSEEEENEE.SNW.S
SNWNWW.NENSSWESNWEESSSSWWSWSNWNS.WNSWENSESNWEEES.EEENNE.SENNWW.ENS.SWWEEENSNES.EN.S.WWWNWWWSWWWE.NWS
ENNEENENENSSSWSESNSWSNS.NWENENNEESNSNSWENESNNW.ESNEEENSWENS.WESN.SSWENNSWW.SW.SWENEEEESES.NWEWSWEENS
SEENSWNWWSWSWNWNSNESSNSNESNWNENE.SNWNWNWWWWNWNW.ENNWNWWSWWEEN.SNSWS.NWNWENSWNWWNSNSWSWWNESEESNWNN.WW
SNWWES.WNESS.ES.WNWSSNEN.ESNNNNWWES.EEESEESNNWNWWSWSWWWE.NWWSWSNS.WE.NEENSWSWEENENSNWSENSWSWWEENNSWS
SESNWESNNSW.ENES.ENSSNWWW.SNNNWWNWSENSWWN.SNWEE.NSNE.EN.EENNSNENEESESNNWWW.SWNWSSWW.SWN.WSS.WEESNWNS
ENESNWSNNEESNESSEN.SEESESSWNNSWWNNENSSEENNWEENSWNES.ENEENSWWWES.WWENENSWWWNWNEN.S.SWWENSWSEENN.SEENS
EE.SESENSSW.SWEEN.NWSWWN.SESNWSNNWSWSSSWSW.SWWWNNWSNNWNWWESE.NEENNSWWWSSWWWENNWWWNWESNSWNS.WENNENSWS
NNSWN.SW.SNWSNWWWWWWW.SWWENSSWWNWWSNESSNSESESE.NWNWN.NWWN.SNWNSWWSW.SWWWWWWNWWWWWES.WNE.NEEEN.NWWSWS
NNW.NSWNSWSNSESSWWS.WWWSNE.SWEEESNSNWS.NENESSNESNWWNWE.NNSWENNEE.SENSEESESNES.EEN.EESEESNSW.WWSENSNW
ESESNESNSWWNESEE.NSEES.WSNWWENESSNE.NEENSWSWEEN.EEESNWWNNSSWWNWWWSN.ESESNSNNSEN.SWWSSNSWNSNEENENSWES
NENEN.SNWESNWEEESNSN.ESNWESEN.WWESESNSWWSWWSWESENEWS.ESNNSS.NWSWNWSWWENSNSENSNWWSENSENS.NWNNWWSWESNS
NSWSWWESENSESES.ENENSWEEENEN.WNSWWNENESN.SWWENENESNSEN.NNWEE.NWNWSSENSWWNSNWESENSNSEE.EESENESNWNWWES
SWNWWE.SNWENSN.SWSWWSNWEEE.SWN.ES.SWWWSNWEESNSWSNENSNWENSEEESEENNWSNWSEENEEN.ENSWNSSWWWSWNWSESEESENS
.ESENNWWWNSWWNWWNWNNEE.NSWWWNWW.SNES.NWEEE.SN.NWNSWSENNWENSWWNWSWSE.NSNWWWWWWSWWENSESNNEESNESWNEEN.W
ENEEEEESNNS.SWESSESSWEENEEEEE.SWSNWSNE.NWWWWNWWWNSNENEENSWESSWNWNW.ESES.WWWENES.NWE.SNE.SWSWSENNWSW.
NESSWSWWNNSNWENENNSSENSWSWWEES.NSNNSNWWWSWWSEE.NNSNWWNESSWWWEEEESENNSSWENENNEEENWN.SE.NWWWSN.SWSWWNW
NWESNWSWENSSEESESN.SNWWNSSWNWSENSNSWNWWNESN.EEENNES.ENSWSEESEESSWNSNSE.EEEENNSWWNNWWSWWWENSNWWNWESEN
.NWES.W.N.S.N.ENENSWSE.NWEE.NSNSWNEEESNNWWNWNW.SWWSNNSSWWNWSN.WSEN.N.SENSWWSWESNW.SWW.ENSWSEEEEENEN.
EEN.EEESSWESNNSWWSW.SNWEEESENENESNEE.EESEEEN.NWWENENNEEEEENSNWSENESNWSNWWENSNWW.NSW.EENNSNWNNSW.SWWW
NSWW.WWWSN.ENNSESS.NSEENSWWNSWWWSENSWWWSNWWWEEEENEESSWWSWW.EENESENS.NSSWENSWEEESNS.NNEENSEENNSNWW.EN
NS.NWSWS.NNSWNSSWESNSNWWSSWNWESNWNSESENSNWWNNWENENSWESNWENE.SE.SNWEESSWNNSWEN.SWNEENNSWWWNWENESSENN.
NENSNWNEENSWSNWSWWSNSSENSSWSWNEEENSSWNWWSEEN.NSWN.WESE.ENENSWNWSSNSWSSEENSSNWNESSWWWNEE.EENSWWWSNWNW
N.SEESNEEEESEES.ENSNWWNSWSNESNWWWSWESES.SN.EES.NNWSNSSENSSWSSWNWSNSWWSNWWWWENNWSEEES.EEEN.SEEES.EESN
NSWEESNNSW.WENESNWEEEENES.NSW.EENESSWNSNWNWN.SENESSNSWNSWSNWESWWSNSES.EEEESSWWNEES.WNNW.WNWSE.EENSWN
NWENSWNWSNWEN.WW.NWWWWWWEESESENSSWWE.NSEESNNWEN.WSESSENSWESES.NNSNENESSWE.S.ENNW.EESNWNWWWWWNWWWWSEN
EES.WWENS.NSWWWESNWESESNWWS.WNSWS.SWENESSSNENSWWNWSS.NW.NWENESNWSNWSWS.NSWESNWWSWWWSEEESNWEEEES.NWNN
SW.SWNNNENNWESNWESNNENEENNES.NSWWSW.NWSWEENNWWENSWSSESNWENE.SW.NWENSWWENSNWEEENSENNENESEESNSE.EESENN
.NSWNWNNWEE.NEEN.ESNSWWSSWWWENSESESSWNEEEEES.EN.SN.ENEENN.SWW.ESENSWSWW.WEEESE.SNSWWESSSWENSNWWWWNEN
ENSEENNWWWEEN.SWE.SSWSNSEES.W.ENSSW.NNWWSWSSENNSWNWWWEESNWESESNENSWSWENSWNWW.SWWNWSN.SESNE.SSSWWWWWW
SWWNWEEEESNW.SW.NWWSWWNESSESNNE.SEEEEESNWNEENENSEES.WN.ESNWSNENESS.E.NWSNWWSWESES.SNWESSESSWEEEEEE.N
E.EENN.SWWENNESESSSWESN.SSSWNNWWESSWE.SSWNWWWWWENSWENNWWSSNEN.ENSEEEESNEESN.NWSNES.ENSSSNSEEESEESESN
SENENNW.SW.WWWSNSWSENENNWWESNSWNSWESNWWSSWWWWWEE.SSNSWWNSSNWSENSEEEESSEE.SNWESSNSWENSWS.N.SESENSWNES
.NEEEENSWNWWSWENSSWN.WWE.SWWSWNNWESS.W.SWESNENNWSWSNWENNS.NNSN.WSWSW.SNSWE.NN.SNEEN.SWESSWSNESSWEN.S
ENN.SW.SESENSNWW.SENSWNWSW.SW.NWENSESNWW.NENSWWNW.WEENENEENSWNWWWNSNSWNWEESNSWWN.E.NWNWWSNWNWSEENSNS
NNNWSNWENSN.EESNSWNWSNWWS.WWEESNSWESEEEESSWSE.NSEEEN.ESENSWS.EESES.NSENEN.ENEESNWNWWEES.ESESNES.SWNW
NNWNW.NWWWNWE.SNWSWNW.ENESEENSWNSNWWSWE.SSNWESNSNWSEENSSWWNSENSWNEENEESN.NWE.SE.NS.ENSWNWEESNW.SWSWW
NWSWWNEESEWNWWW.SWESESNWWS.SWE.NSSWWSNSWS.EENSNWEN.NWW.SESNWN.SSNWWWWWWNWWWNWWEENEENSWENNWWW.NWS.SNN
ESSESNWWEENSWSWNWENEN.EENSNS.EENSESNSNWNSENSWSNWNWWESNWENEEENNSEEEESES.EESNWNWNSWWESSEEESNWESENSNWNW
N.SNES.NSWSWNWESEN.EEENSWSNENN.WWSWNWESNWN.SNWENEENNESNWWWEEESSEENEENESN.ESSWNNWENNEENSWEEENENSESESN
NSWSWESNWNWESSWWNSEN.WWWWSNWSNWSSWESENEEENSWEEEENENN.EES.N.WWWSSWENSW.ENNWWSNWSWNWWWSWWNESSW.SWSW.WN
NES.N.WEEEENESEEN.NWWWSWNSNNSSNSESNSNNSWWWESNNW.EESNSWWESNWWSSW.NWWWNWW.ES.ESNWNEE.NSESN.SSNSE.SESEN
NWESNWWWSWWWWSNSWESEENSNNSSWWWNSSENEENSWWWWSESNEN.ENS.N.SNWN.EEEEEEEESNSWSSWSSENNEENESSNNWSNE.SWNSNW
EN.EEESNES.ENSNWENSNWWWNWSSSWENSEEESESSEEENENSNN.N.SSNNWSESNWSWWEESESES.NS.NWWNENNWW.ESNESS.SWEENEES
NWWWWSWN.ENN.SESNWESEES.NWESEN.WEENSSWSNWSWE.ESNWNSWEE.NENEENESNSWENS.EENESEEENESEENNSWNWSESSNWWWE.S
ESNWNSENWWWNNENSSNWSNWENWWWSNSWEN.SWSSWENS.NWSWENNWSSEENSWWSWWWNESWSWNEESSWNWW.NENEENESENSSWSES.N.SW
NEEESSNWWWENEE.SSENEESSWWENSNSNESNW.WESNWWEESESNWW.SSNWWEESEEESNWSNSEN.SWESESNWNSWNSWWSN.WESENESNSW.
SWW.SEEEEEN.N.SWWNWESSESNSWWNWNSWS.ENSE.EEN.ESEESNNWSESNWEWSWWESN.NWN.NWE.ESSENNE.NSSNWNWW.SSSWWNESN
.ENNEESEEEESNSWEESNWSWSSNESEESNSWESNSWESN.WWWS.WWNNWSNESNWWE.NWWNWSWWWWWWSWSSNWNWWSWEESSWNWWWESENWSN
ENENWWENSWWWNW.N.SENESWSNWWNWSNSE.SSW.NENSWSWESS.NWSWESESEEEEESEENS.WEE.NWNWE.NNWNESESSSNWWWWWSNWNEN
NWNSWNWWW.WWW.ENNWNSWSSWSWWWNENSNSWSESNWWWNWNWSENSNW.NESSNESEWSNWWEESSWWWEEEESNWWNWENESSEEEEWNW.NNWS
ENSWNWSWEESEEEN.WENSN.S.WNWNNSWWNW.SNES.EESESNES.W.ESN.SNNNEENSNWNE.SSESNWWW.EESNEN.SWSSNWWWSWESNWWW
SWWSWNSNSSWNSWWWWWWWNWES.ESENSSWWWWEN.ENNWENEN.WEEENENNESNNWWWEESNWSWEEEEE.NNESENN.WWNWSEEESE.NEESES
EESESNWNESSWESEEEESEWNWSES.NEWESSENEENWESNSWWWWENESEEENSWNEEENWWSENS.EESSNENSNSEENSW.SWSN.SW.ENSEENS
SWSEEE.NWSSNWSESESENESNSN.ENSWWWWNSWWWNWSNWES.SWWWENNENEENSWWWWNSNWESN.SENNSWNSSWWSNWWNENSWESNWENSWS
SWWNWEEEN.S.NSNENEEENSNWNENSWE.ESNSESNWSWEENESSESNWENNSE.SW.EESSWEESSNNEEENSEN.S.NSEESNWWESNESNWWWNS
SESSNNWWWWESNSNWWWEE.ESENNWWEESNENSNESNSSN.SWS.NESNSWSWNWE.ENSSEEN.SSNSWSWWWNWWESNWN.WEENSWNWEESEENS
ESSSNWSW.NWWNWSWWNNNWWEEEESNNWSNSWWNSWNSWNNWNWEN.ENSNWES.EENSWESSWNWSN.NSEWWWWNSW.WWSWNWSWENNSWENESS
SWSWNNSNSWWWWWE.NNWEEE.SE.SNWNSNW.ENEENSENEEEEN.WE.EEENSNN.WWSWWEESSENENEEESENNESESNWNWNWESENSNWWWSS
SSESNSWNWEESSSWESENSWSWWNWEESNESEENENSWSNWWWEEEEENSWEESESNWSWWSWSWWEEENESSSWEENSWNEESNNEENENSW.W.N.S
SESSNEEE.NSWSESN.NW.NW.SWNWWWNWESSWWWWNWSWENNWENSWWEN.E.ESNEESSSWSSENSWWSNS.NENESNW.SNWN.ES.EEESENSW
ESSWNWWEENSSEESNWWNWWWWSNWWES.NWSSEEEE.SWENSWNSWWESNWWWWWSN.WWSESESNWWENENENNSW.EENSWEENEN.SWSWWNWWS
SSEEEE.NESSEESW.ENEEESNWSWNWEEEN.SNESNWWNNWWNWESENESEE.ENSNWWEE.ESSEEESSWWWWNSNWWSWSENESNSWWNWEEESSW
SEESSEENNSEESSESNWWSWWSWSWWNWWWSSWENSNWWESEE.N.EN.SWNSENSWESNWWWWSSNE.SS.EESNS.NNSNWNNNSSWSWWWNSWSES
EESS.NEESEESS.NESENS.WWWWENEE.N.ESNWEEEENSNNWNWSWW.SW.N.ESNE.ESENSSNNWWESN.WNSNNWESENNN.SSSES.N.NEES
ENSEENN.WENSESN.SN.SESEESNWWWWNWWESNWWW.WSNENSNESNWWNWNE.SENENENSWSNWSWWSNWENENENSESENNWSSENENSWNWWW
NWSSWWNWENSSSWNNENNENEN.EEEESNWWNWESNWNWWEENSWNSEESESN.NSENENEENS.WESSESS.NWWWWNSS.ENESNSENEESSNEEE.
ENSSENSNWWNSSENEEESEEESWWSWWWNENEN.EEES.NWSWS.NES.ENSNWNWSWNWWWWSESN.SN.ENEESESNSEESENSNEEENSS.SWWWW
N.WSNWES.NNWENENSWWNES.NNEESEEESNWSWWWSESNWNSENSENSWESNWWWNNWSWWEN.SWSNW.ENSWN.NESWWN.WSSSWWWESS.ESN
SWWESNWWNNWWWWNWESEENEENSWWSN.WEENSEENSNEEENSNWSSWWNWESEESNWNS.NSWWWNW.NSWWSSNWNWS.SWW.WWESNW.S.ENSN
ESNWS.WSNWESENSN.WN.SWWSWSNSNWWSWSWNSWSNE.SWW.N.ESSWN.ENSW.NWWNNESEEESNNW.NW.ENWN.SW.NWWWWS.NWEEN.ES
.E.NEENEEEN.NWWNWWWWE.NWWWNWE.NWNE.NWNENNWEEENNWWWWNNWWWEEEEEENNWEN.WWEEEEEEENENNWEEEEEE.NEE.NWWWWWW
*/